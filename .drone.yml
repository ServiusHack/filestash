kind: pipeline
name: default

workspace:
  base: /go
  path: filestash

clone:
  depth: 1

steps:

- name: build_prepare
  image: alpine:latest
  depends_on: [ clone ]
  commands:
  - mkdir -p ./dist/data/state/config
  - cp config/config.json ./dist/data/state/config/
  - mkdir -p ./filestash/data/state/config
  - cp config/config.json ./filestash/data/state/config/

- name: build_frontend
  image: node:13-alpine
  depends_on: [ build_prepare ]
  commands:
  - apk add make git > /dev/null
  - npm install --silent
  - make build_frontend
  - cp -R ./dist/data/public ./filestash/data/public

- name: build_backend
  image: golang:1.16-stretch
  depends_on: [ build_prepare ]
  environment:
    CGO_LDFLAGS_ALLOW: "-fopenmp"
    GO111MODULE: "on"
  commands:
  - apt-get update > /dev/null && apt-get install -y libglib2.0-dev curl make > /dev/null
  - make build_init
  - make build_backend
  - timeout 1 ./dist/filestash || true
  - cp dist/filestash filestash/
  - chmod -R o+r+w+x ./dist/data

- name: release_prepare
  image: debian:stable-slim
  depends_on: [ build_frontend, build_backend ]
  commands:
  - chmod -R o-r-w-x- ./filestash

- name: release_docker
  image: plugins/docker
  depends_on: [ release_prepare ]
  when:
    branch:
    - master
  settings:
    dockerfile: ./docker/Dockerfile
    repo: serviushack/filestash
    username:
      from_secret: DOCKER_USERNAME
    password:
      from_secret: DOCKER_PASSWORD
    tags:
    - latest
    - "${DRONE_COMMIT_SHA:0:7}"
